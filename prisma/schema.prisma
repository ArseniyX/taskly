// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model ChatMessage {
  id        String   @id @default(cuid())
  shop      String
  userId    String?
  message   String
  role      String   // 'user' or 'assistant'
  timestamp DateTime @default(now())
  metadata  String?  // JSON string for additional data

  @@index([shop, timestamp])
}

model ChatConversation {
  id          String   @id @default(cuid())
  shop        String
  userId      String?
  title       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true)
  metadata    String?  // JSON string for additional data

  @@index([shop, updatedAt])
}

model Subscription {
  id                String   @id @default(cuid())
  shop              String   @unique
  planName          String   // "Free Plan", "Pro Plan", "Enterprise Plan"
  status            String   // "active", "canceled", "past_due", "trialing"
  shopifySubscriptionId String? // Shopify's subscription ID
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  canceledAt        DateTime?
  trialStart        DateTime?
  trialEnd          DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  isTest            Boolean  @default(false)

  // Relations
  usageRecords      UsageRecord[]

  @@index([shop, status])
}

model UsageRecord {
  id             String   @id @default(cuid())
  shop           String
  subscriptionId String
  userId         String?
  usageType      String   // "chat_query", "api_call", etc.
  count          Int      @default(1)
  date           DateTime @default(now())
  metadata       String?  // JSON string for additional usage data

  // Relations
  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)

  @@index([shop, date])
  @@index([subscriptionId, date])
}
